/* eslint-disable import/no-anonymous-default-export */
// Import statements
import Head from 'next/head';
import React from 'react';
import CreateRoomCard from '@/components/pages/rooms/CreateRoomCard';
import JoinRoomCard from '@/components/pages/rooms/JoinRoomCard';
import Header from '@/components/shared/Header';
import axios from 'axios';

import { withPageAuthRequired } from '@auth0/nextjs-auth0';
import buildRoute from '@/utilities/buildRoute';

// eslint-disable-next-line react/display-name
export default ({ rooms }: any) => {
  return (
    <>
      <Head>
        <title>{`AlgoRooms ðŸš€ | Rooms: ${rooms.length} Public AlgoRooms`}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg-gradient-to-tr from-darkAccent to to-gradientEnd w-screen h-screen flex flex-col">
        <Header />
        <div className="flex flex-col h-screen justify-center">
          <div className="flex justify-center space-x-[171px]">
            <div className="text-center">
              <h2 className="text-5xl font-bold text-white mb-[40px]">
                Join a room
              </h2>
              <JoinRoomCard rooms={rooms} />
            </div>
            <div className="text-center">
              <h2 className="text-5xl font-bold text-white mb-[40px]">
                Create a room
              </h2>
              <CreateRoomCard />
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

// Auth-guarding the /rooms page
export const getServerSideProps = withPageAuthRequired({
  async getServerSideProps(context) {
    const response = await axios
      .get(buildRoute('/api/rooms/public'))
      .then((res) => res.data);

    const { rooms } = response;

    return {
      props: {
        rooms: rooms.map((room: any) => {
          return {
            ...room,
            topics: room.topics.toString().replace(/,/gi, ', '),
          };
        }),
      },
    };
  },
});
